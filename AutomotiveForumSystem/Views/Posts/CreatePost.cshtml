@model PostCreateViewModel

@{
	var tagLabels = ViewData["TagLabels"] as List<Tag>;

}

<div class="d-flex flex-column align-items-center " style="width: 100%;">
	<div class="d-flex" style="width:70%">
		<h4 class="text-light rounded p-2">CREATE A POST</h4>
	</div>
	<form asp-controller="Posts" asp-action="CreatePost" style="width: 70%;" method="post">

		<div class="d-flex" style="gap: 1em;">
			<div class="d-flex flex-column" style="width: 100%;">
				<div class="form-floating mb-3">
					<input asp-for="Title" type="text" id="floatingInput" placeholder="" class="form-control bg-light" required />
					<label asp-for="Title" class="form-label">Title</label>
					<span asp-validation-for="Title" class="form-error text-danger"></span>

				</div>

				<div class="form-floating mb-3">
					<textarea asp-for="Content" type="text" id="floatingInput" placeholder="" class="form-control bg-light" style="min-height: 150px;" required></textarea>
					<label asp-for="Content" class="form-label">Content</label>
					<span asp-validation-for="Content" class="form-error text-danger"></span>

				</div>
				<p style="color:white">Tags</p>
				<div class="form-floating mb-3">
					<input type="text" asp-for="Tags" id="floatingInput" placeholder="" data-tags-input="tags-input" readonly class="form-control bg-light" style="cursor:default" />
					<label asp-for="Tags" class="form-label">Tags</label>
				</div>
			</div>

			<div class="d-flex flex-column bg-dark rounded mb-3 p-2" style="width:50%; height:30%;">
				<div id="tags-container" class="d-flex flex-wrap align-content-start" style="overflow-y:auto; width:100%; height:285px; gap: 0.5em">
					@{
						if (tagLabels != null)
						{
							// int iterator = 0;
							foreach (var tag in tagLabels)
							{
								// <button type="button" class="btn btn-outline-info text-light tag-button-element" style="font-size:12px; box-shadow: none" data-id="@iterator" data-tag="@tag.Name">@tag.Name.ToString()</button>
								// iterator++;
							}
						}
					}
				</div>

				<div class="d-flex flex-row text-light mb-2">
					<p class="d-flex flex-grow-1 justify-content-center align-items-center m-0" style="height:100%; width:100%">Add new tag</p>
					<input class="d-flex flex-grow-1" maxlength="15" type="text" pattern="[a-zA-Z0-9.]+" id="floatingInput" placeholder=""
						   data-custom-tag-input="custom-tag_input" data-tag="value" class="form-control bg-light" style="cursor:default" />
					@* <input type="text" pattern="[a-zA-Z0-9.]+" title="Only numbers, letters, and dots are allowed" /> *@
				</div>
			</div>
		</div>

		<div class="d-flex justify-content-between p-2">
			<div class="d-flex">

				<label asp-for="CategoryID" class="form-label m-auto text-light">Category</label>
				<select asp-items="@Model.Categories" asp-for="CategoryID" class="form-select ms-2"></select>
				<span asp-validation-for="CategoryID" class="form-error"></span>

			</div>

			<div>
				@if (Context.Request.Headers.Referer.ToString().Contains(Context.Request.Path))
				{
					<a asp-controller="Home" asp-action="Index" class="btn btn-danger mx-2" style="text-decoration: none">Cancel</a>
				}
				else
				{
					<a href="@Context.Request.Headers.Referer.ToString()" class="btn btn-danger mx-2" style="text-decoration: none">Cancel</a>
				}

				<input type="submit" value="Create" class="btn btn-primary" />
			</div>
		</div>
	</form>
</div>

<script>
	$(document).ready(function () {

		// Attach click event handler to tags with class 'tag-button-element'
		$('tag-button-element').on('click', BindTagClick);

		// Used to handle the input for custom tags
		$('#custom-tag-input').keypress(OnCustomTagInputChanged);

		// Create a new JS array with all tags from the C# tag list
		tagsArray = @Html.Raw(Json.Serialize(tagLabels.Select(item => item.Name).ToArray()));
		InitializeTagContainer();
	});
</script>