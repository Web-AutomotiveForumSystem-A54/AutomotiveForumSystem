@model PostCreateViewModel

@{
	var tagLabels = ViewData["TagLabels"] as List<Tag>;

}

<script>
	function AddTag(tag) {

	}
</script>

<div class="d-flex flex-column align-items-center " style="width: 100%;">
	<div class="d-flex" style="width:70%">
		<h4 class="text-light rounded p-2">CREATE A POST</h4>
	</div>
	<form asp-controller="Posts" asp-action="CreatePost" style="width: 70%;" method="post">

		<div class="d-flex" style="gap: 1em;">
			<div class="d-flex flex-column" style="width: 100%;">
				<div class="form-floating mb-3">
					<input asp-for="Title" type="text" id="floatingInput" placeholder="" class="form-control bg-light" required />
					<label asp-for="Title" class="form-label">Title</label>
				</div>

				<div class="form-floating mb-3">
					<textarea asp-for="Content" type="text" id="floatingInput" placeholder="" class="form-control bg-light" style="min-height: 150px;" required></textarea>
					<label asp-for="Content" class="form-label">Content</label>
				</div>
				<p style="color:white">Tags</p>
				<div class="form-floating mb-3">
					<input id="tags-input" type="text" asp-for="Tags" id="floatingInput" placeholder="" readonly class="form-control bg-light" style="cursor:default" />
					<label asp-for="Tags" class="form-label">Tags</label>
				</div>
			</div>

			<div class="d-flex flex-column bg-dark rounded mb-3 p-2" style="width:50%; height:30%;">
				<div class="d-flex flex-wrap align-content-start " style="overflow-y:auto; width:100%; height:325px; gap: 0.1em">
					@{
						if (tagLabels != null)
						{
							foreach (var tag in tagLabels)
							{
								<button type="button" class="badge bg-info text-dark tag-button" style="font-size:12px" data-tag="@tag.Name">@tag.Name.ToString()</button>
							}
						}
					}
				</div>
			</div>
		</div>

		<div class="d-flex justify-content-between p-2">
			<div class="d-flex">

				<label asp-for="CategoryID" class="form-label m-auto text-light">Category</label>
				<select asp-items="@Model.Categories" asp-for="CategoryID" class="form-select ms-2"></select>
				<span asp-validation-for="CategoryID" class="form-error"></span>

			</div>


			<div>
				@if (Context.Request.Headers.Referer.ToString().Contains(Context.Request.Path))
				{
					<a asp-controller="Home" asp-action="Index" class="btn btn-danger mx-2" style="text-decoration: none">Cancel</a>
				}
				else
				{
					<a href="@Context.Request.Headers.Referer.ToString()" class="btn btn-danger mx-2" style="text-decoration: none">Cancel</a>
				}

				<input type="submit" value="Create" class="btn btn-primary" />
			</div>
		</div>
	</form>
</div>

<script>
	$(document).ready(function () {
		// Initialize an array to store clicked tags
		var clickedTagsArray = [];

		// Attach click event handler to tags with class 'tag-button'
		$('.tag-button').on('click', function () {
			// Get the clicked tag's text
			var clickedTag = $(this).data('tag');

			// Add the clicked tag to the array
			if (clickedTag !== undefined && clickedTag !== null) {
				var index = clickedTagsArray.indexOf(clickedTag);

				// Check if the tag is not already in the array
				if (index === -1) {
					if (clickedTagsArray.length < 5)
						clickedTagsArray.push(clickedTag);
					else {
						alert("Up to 5 tags")
					}
				} else {
					// Remove the tag from the array
					clickedTagsArray.splice(index, 1);
				}

				// Debug: Log the current state of the clicked tags array
				console.log(clickedTagsArray);

				// Update the input field by joining the array elements
				$('#tags-input').val(clickedTagsArray.join(' '));
			}
		});
	});
</script>