@model UserLoginViewModel
@{
    Layout = "_LoginLayout";
    var justRegistered = Context.Session.GetString("isRegistered");
}
<div class="container col-4" style="">
    <div class="background">
        <div class="shape"></div>
        <div class="shape"></div>
    </div>
    <form asp-controller="Auth" asp-action="Login" class="d-flex flex-column justify-content-between login-form" method="post">
        <div>
            @{
                if (justRegistered == "true")
                {
                    <h2 style="text-align: center; padding-bottom: 20px; color:green;">Registration successful. Please login.</h2>
                    Context.Session.Remove("isRegistered");
                }
                else
                {
                    <h2 class="text-light" style="text-align: center; padding-bottom: 20px;">Login</h2>
                }
            }

            <div class="form-floating mb-3">
                <input asp-for="Username" type="text" id="floatingInput" placeholder="name@example.com" class="form-control bg-light" required />
                <label asp-for="Username" class="form-label">Username</label>
            </div>

            <div class="form-floating mb-3">
                @* change type text to type password*@
                <input asp-for="Password" type="text" id="floatingInput" placeholder="" class="form-control bg-light" />
                <label asp-for="Password" class="form-label"></label>
            </div>
            <span asp-validation-for="Username" asp-validation-for="Password" class="form-error" style="color: #7B0828"></span>
        </div>

        <div>
            <div class="login-button-container">
                <input type="submit" value="Log in" class="btn btn-primary login-button" />
            </div>
            <div class="register-button-container">
                <a asp-controller="Auth" asp-action="Register" class="btn btn-outline-light register-button">Register</a>
            </div>
        </div>
    </form>
</div>